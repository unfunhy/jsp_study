/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.24
 * Generated at: 2019-10-29 12:59:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import java.util.ArrayList;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name='viewport' content='width=device-width, initial-scale=1'>\r\n");
      out.write("<title>board</title>\r\n");
      out.write("<link href=\"./Resources/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      java.util.ArrayList<study0926.Board> board = null;
      board = (java.util.ArrayList<study0926.Board>) _jspx_page_context.getAttribute("board", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (board == null){
        throw new java.lang.InstantiationException("bean board not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("div.header {\r\n");
      out.write("font-size:45px;\r\n");
      out.write("border:1px dashed;\r\n");
      out.write("width:90%;\r\n");
      out.write("height:100px;\r\n");
      out.write("text-align: center;\r\n");
      out.write("padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
 
request.setCharacterEncoding("UTF-8");
int numberOfPost = 8; // 삭제
int index = Integer.parseInt((String)request.getAttribute("index"));
int count = Integer.parseInt((String)request.getAttribute("count"));
String searchTag = (String) request.getAttribute("searchTag");
String searchText = (String) request.getAttribute("searchText");
float end; 
if (count % numberOfPost == 0) {
	end = count / numberOfPost;
}
else {
	end = count / numberOfPost + 1;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class='d-flex justify-content-center mt-3 mb-3'>\r\n");
      out.write("\t<div class='header'>\r\n");
      out.write("\t\t<a href=\"Control.jsp?action=read_board&index=0\">Board</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table style='width:90%; margin:auto; text-align:center;' class='table table-hover'>\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th style='width:50px;'>#</th>\r\n");
      out.write("\t\t\t\t<th style='width:100px;'>태그</th>\r\n");
      out.write("\t\t\t\t<th style='width:50px;'></th>\r\n");
      out.write("\t\t\t\t<th style='width:350px;'>제목</th>\r\n");
      out.write("\t\t\t\t<th style='width:50px; '></th>\r\n");
      out.write("\t\t\t\t<th style='width:100px;'>작성자</th>\r\n");
      out.write("\t\t\t\t<th style='width:150px;'>작성 날짜</th>\r\n");
      out.write("\t\t\t\t<th style='width:100px;'>조회수</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
 for (int i = 0; i < board.size() ; i++) {
      out.write("\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(board.get(i).getId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(board.get(i).getTag());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t<td style='text-align:left;'><a href=\"Control.jsp?action=read&id=");
      out.print(board.get(i).getId());
      out.write("&index=");
      out.print(index);
      out.write("&searchTag=");
      out.print(searchTag);
      out.write("&searchText=");
      out.print(URLEncoder.encode(searchText));
      out.write('"');
      out.write('>');
      out.print(board.get(i).getTitle());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(board.get(i).getUsername());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(board.get(i).getC_date());
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(board.get(i).getViews());
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div style='width:300px; height:30px; text-align:center; margin:auto; font-size:large'>\r\n");
      out.write(" \t");

 	int front = index - 2;
 	if (front < 0 || front +1 < 0) front = 0;
 	float back = front + 5;
 	if (back > end) back = end;
 	for(int i = front; i < back; i++) {
 		if (i == (int) index) {
      out.write("\r\n");
      out.write(" \t\t\t<a style='color:red; margin-right:5px' href=\"Control.jsp?action=read_board&index=");
      out.print(Integer.toString(i));
      out.write("&searchTag=");
      out.print(searchTag);
      out.write("&searchText=");
      out.print(URLEncoder.encode(searchText));
      out.write('"');
      out.write('>');
      out.print(Integer.toString(i + 1));
      out.write("</a>\r\n");
      out.write(" \t\t");
}
 		else {
      out.write("\r\n");
      out.write(" \t\t\t<a style='margin-right:5px' href=\"Control.jsp?action=read_board&index=");
      out.print(Integer.toString(i));
      out.write("&searchTag=");
      out.print(searchTag);
      out.write("&searchText=");
      out.print(URLEncoder.encode(searchText));
      out.write('"');
      out.write('>');
      out.print(Integer.toString(i + 1));
      out.write("</a>\r\n");
      out.write(" \t\t");
}
 		}
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div class='d-flex justify-content-center'>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form class='form-inline' style='text-align:right; float:left; width:500px; height:45px; margin:auto' name='search' id='search'>\r\n");
      out.write("\t\t\t\t<input type='hidden' name='action' value='read_board'>\r\n");
      out.write("\t\t\t\t<input type='hidden' name='index' value='0'>\r\n");
      out.write("\t\t\t\t<select class='form-control' name='searchTag' id='searchTag' style='height: 40px; width: 80px; text-align:center; margin-right:5px;'>\r\n");
      out.write("\t\t\t\t\t<option value='contents'>내용</option>\r\n");
      out.write("\t\t\t\t\t<option value='title'>제목</option>\r\n");
      out.write("\t\t\t\t\t<option value='username'>작성자</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t<input class='form-control' type='text' name='searchText' style='height:40px; width:400px' id='searchText' placeholder=");
      out.print(searchText );
      out.write(">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<input type='button' class='btn btn-primary p-2' style='margin-left:10px; margin-right:10px; width:80px; height:45px;' value='검색' onclick='Search()'>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t<input type='button' class='btn btn-primary p-2 ml-1' style='width:120px; height:45px; float:right; margin-right:70px;' value='글쓰기' onclick='GotoCreateNewPost()'>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<br>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"./Resources/js/bootstrap.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tfunction GotoCreateNewPost() {\r\n");
      out.write("\t\tlocation.href = 'createPost.jsp';\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction Read_Post() {\r\n");
      out.write("\t\tdocument.getElementById(\"read_post\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction Search() {\r\n");
      out.write("\t\tdocument.getElementById(\"search\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
